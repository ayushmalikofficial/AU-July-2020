{"ast":null,"code":"var _jsxFileName = \"A:\\\\Accolite\\\\React\\\\Assignment\\\\my-to-do\\\\src\\\\component\\\\ToDoList.js\";\nimport React, { Component } from 'react';\nimport ToDoForm from './ToDoForm';\n\nconst returnList = () => {\n  if (localStorage.getItem('todolist') == null) localStorage.setItem('todolist', JSON.stringify([]));\n  return JSON.parse(localStorage.getItem('todolist'));\n};\n\nconst handleEdit = index => {\n  this.setState({\n    currentIndex: index\n  });\n};\n\nconst handleDelete = index => {\n  var list = this.returnList();\n  list.splice(index, 1);\n  localStorage.setItem('todolist', JSON.stringify(list));\n  this.setState({\n    list,\n    currentIndex: -1\n  });\n};\n\nconst onAddOrEdit = data => {\n  var list = this.returnList();\n  if (this.state.currentIndex == -1) list.push(data);else list[this.state.currentIndex] = data;\n  localStorage.setItem('todolist', JSON.stringify(list));\n  this.setState({\n    list,\n    currentIndex: -1\n  });\n};\n\nconst ToDoList = () => {\n  state = {\n    currentIndex: -1,\n    list: this.returnList()\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ToDoForm, {\n    currentIndex: this.state.currentIndex,\n    list: this.state.list,\n    onAddOrEdit: this.onAddOrEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 21\n    }\n  }, this.state.list.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 33\n      }\n    }, item.todo), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleEdit(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }\n    }, \"Edit\")), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.handleDelete(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 37\n      }\n    }, \"Delete\")));\n  }))));\n};\n\nexport default ToDoList;\n/* import React, { Component } from 'react'\r\nimport ToDoForm from './ToDoForm'\r\n\r\nclass ToDoList extends Component {\r\n    state = {\r\n        currentIndex: -1,\r\n        list: this.returnList()\r\n    }\r\n\r\n    returnList() {\r\n        if (localStorage.getItem('todolist') == null)\r\n            localStorage.setItem('todolist', JSON.stringify([]))\r\n        return JSON.parse(localStorage.getItem('todolist'))\r\n    }\r\n\r\n    handleEdit = (index) => {\r\n        this.setState({\r\n            currentIndex: index\r\n        })\r\n    }\r\n\r\n    handleDelete = (index) => {\r\n        var list = this.returnList()\r\n        list.splice(index, 1);\r\n        localStorage.setItem('todolist', JSON.stringify(list))\r\n        this.setState({ list, currentIndex: -1 })\r\n    }\r\n\r\n    onAddOrEdit = (data) => {\r\n        var list = this.returnList()\r\n        if (this.state.currentIndex == -1)\r\n            list.push(data)\r\n        else\r\n            list[this.state.currentIndex] = data\r\n        localStorage.setItem('todolist', JSON.stringify(list))\r\n        this.setState({ list, currentIndex: -1 })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ToDoForm\r\n                    currentIndex={this.state.currentIndex}\r\n                    list={this.state.list}\r\n                    onAddOrEdit={this.onAddOrEdit}\r\n                />\r\n                <hr />\r\n                <table>\r\n                    <tbody>\r\n                        {this.state.list.map((item, index) => {\r\n                            return <tr key={index}>\r\n                                <td>{item.todo}</td>\r\n                                <td><button onClick={() => this.handleEdit(index)}>Edit</button></td>\r\n                                <td><button onClick={() => this.handleDelete(index)}>Delete</button></td>\r\n                            </tr>\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoList */","map":{"version":3,"sources":["A:/Accolite/React/Assignment/my-to-do/src/component/ToDoList.js"],"names":["React","Component","ToDoForm","returnList","localStorage","getItem","setItem","JSON","stringify","parse","handleEdit","index","setState","currentIndex","handleDelete","list","splice","onAddOrEdit","data","state","push","ToDoList","map","item","todo"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport ToDoForm from './ToDoForm'\r\n\r\nconst returnList=()=> {\r\n    if (localStorage.getItem('todolist') == null)\r\n        localStorage.setItem('todolist', JSON.stringify([]))\r\n    return JSON.parse(localStorage.getItem('todolist'))\r\n}\r\n\r\nconst handleEdit = (index) => {\r\n    this.setState({\r\n        currentIndex: index\r\n    })\r\n}\r\n\r\nconst handleDelete = (index) => {\r\n    var list = this.returnList()\r\n    list.splice(index, 1);\r\n    localStorage.setItem('todolist', JSON.stringify(list))\r\n    this.setState({ list, currentIndex: -1 })\r\n}\r\n\r\nconst onAddOrEdit = (data) => {\r\n    var list = this.returnList()\r\n    if (this.state.currentIndex == -1)\r\n        list.push(data)\r\n    else\r\n        list[this.state.currentIndex] = data\r\n    localStorage.setItem('todolist', JSON.stringify(list))\r\n    this.setState({ list, currentIndex: -1 })\r\n}\r\n\r\nconst ToDoList=()=> {\r\n    state = {\r\n        currentIndex: -1,\r\n        list: this.returnList()\r\n    }\r\n\r\n        return (\r\n            <div>\r\n                <ToDoForm\r\n                    currentIndex={this.state.currentIndex}\r\n                    list={this.state.list}\r\n                    onAddOrEdit={this.onAddOrEdit}\r\n                />\r\n                <hr />\r\n                <table>\r\n                    <tbody>\r\n                        {this.state.list.map((item, index) => {\r\n                            return <tr key={index}>\r\n                                <td>{item.todo}</td>\r\n                                <td><button onClick={() => this.handleEdit(index)}>Edit</button></td>\r\n                                <td><button onClick={() => this.handleDelete(index)}>Delete</button></td>\r\n                            </tr>\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nexport default ToDoList\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n/* import React, { Component } from 'react'\r\nimport ToDoForm from './ToDoForm'\r\n\r\nclass ToDoList extends Component {\r\n    state = {\r\n        currentIndex: -1,\r\n        list: this.returnList()\r\n    }\r\n\r\n    returnList() {\r\n        if (localStorage.getItem('todolist') == null)\r\n            localStorage.setItem('todolist', JSON.stringify([]))\r\n        return JSON.parse(localStorage.getItem('todolist'))\r\n    }\r\n\r\n    handleEdit = (index) => {\r\n        this.setState({\r\n            currentIndex: index\r\n        })\r\n    }\r\n\r\n    handleDelete = (index) => {\r\n        var list = this.returnList()\r\n        list.splice(index, 1);\r\n        localStorage.setItem('todolist', JSON.stringify(list))\r\n        this.setState({ list, currentIndex: -1 })\r\n    }\r\n\r\n    onAddOrEdit = (data) => {\r\n        var list = this.returnList()\r\n        if (this.state.currentIndex == -1)\r\n            list.push(data)\r\n        else\r\n            list[this.state.currentIndex] = data\r\n        localStorage.setItem('todolist', JSON.stringify(list))\r\n        this.setState({ list, currentIndex: -1 })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ToDoForm\r\n                    currentIndex={this.state.currentIndex}\r\n                    list={this.state.list}\r\n                    onAddOrEdit={this.onAddOrEdit}\r\n                />\r\n                <hr />\r\n                <table>\r\n                    <tbody>\r\n                        {this.state.list.map((item, index) => {\r\n                            return <tr key={index}>\r\n                                <td>{item.todo}</td>\r\n                                <td><button onClick={() => this.handleEdit(index)}>Edit</button></td>\r\n                                <td><button onClick={() => this.handleDelete(index)}>Delete</button></td>\r\n                            </tr>\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoList */"]},"metadata":{},"sourceType":"module"}