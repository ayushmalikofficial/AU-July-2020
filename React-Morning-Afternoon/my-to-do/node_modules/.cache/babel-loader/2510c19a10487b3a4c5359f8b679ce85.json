{"ast":null,"code":"var _jsxFileName = \"A:\\\\Accolite\\\\React\\\\Assignment\\\\my-to-do\\\\src\\\\component\\\\ToDoList.js\";\nimport React, { useState } from 'react';\nimport ToDoForm from './ToDoForm';\n\nconst ToDoList = () => {\n  const [content, setContent] = useState({\n    currentIndex: -1,\n    list: returnList()\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ToDoForm, {\n    currentIndex: content.currentIndex,\n    list: content.list,\n    onAddOrEdit: onAddOrEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"table\", {\n    style: {\n      marginLeft: 10\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 21\n    }\n  }, content.list.map((item, index) => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      style: {\n        fontSize: 13,\n        backgroundColor: \"#F8F8F8\",\n        borderRadius: 10\n      },\n      key: index,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        padding: 10,\n        borderRadius: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 33\n      }\n    }, item.todo), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        borderRadius: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        margin: 10,\n        border: 0,\n        padding: 5,\n        borderRadius: 6,\n        width: 70,\n        backgroundColor: \"#8FDC7E\",\n        color: \"white\"\n      },\n      onClick: handleEdit(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 63\n      }\n    }, \"Edit\")), /*#__PURE__*/React.createElement(\"td\", {\n      style: {\n        borderRadius: 10\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      style: {\n        margin: 10,\n        border: 0,\n        padding: 5,\n        borderRadius: 6,\n        width: 70,\n        backgroundColor: \"#E96F6F\",\n        color: \"white\"\n      },\n      onClick: handleDelete(index),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 63\n      }\n    }, \"Delete\")));\n  }))));\n};\n\nconst returnList = () => {\n  if (localStorage.getItem('todolist') == null) localStorage.setItem('todolist', JSON.stringify([]));\n  return JSON.parse(localStorage.getItem('todolist'));\n};\n\nconst handleEdit = index => {\n  setContent({\n    currentIndex: index,\n    list: list\n  });\n};\n\nconst handleDelete = index => {\n  var templist = returnList();\n  templist.splice(index, 1);\n  localStorage.setItem('todolist', JSON.stringify(templist));\n  setState({\n    currentIndex: -1,\n    list: templist\n  });\n};\n\nconst onAddOrEdit = data => {\n  var templist = returnList();\n  if (content.currentIndex == -1) templist.push(data);else templist[content.currentIndex] = data;\n  localStorage.setItem('todolist', JSON.stringify(templist));\n  setState({\n    currentIndex: -1,\n    list: templist\n  });\n};\n\nexport default ToDoList;\n/* import React, { Component } from 'react'\r\nimport ToDoForm from './ToDoForm'\r\n\r\nclass ToDoList extends Component {\r\n    state = {\r\n        currentIndex: -1,\r\n        list: this.returnList()\r\n    }\r\n\r\n    returnList() {\r\n        if (localStorage.getItem('todolist') == null)\r\n            localStorage.setItem('todolist', JSON.stringify([]))\r\n        return JSON.parse(localStorage.getItem('todolist'))\r\n    }\r\n\r\n    handleEdit = (index) => {\r\n        this.setState({\r\n            currentIndex: index\r\n        })\r\n    }\r\n\r\n    handleDelete = (index) => {\r\n        var list = this.returnList()\r\n        list.splice(index, 1);\r\n        localStorage.setItem('todolist', JSON.stringify(list))\r\n        this.setState({ list, currentIndex: -1 })\r\n    }\r\n\r\n    onAddOrEdit = (data) => {\r\n        var list = this.returnList()\r\n        if (this.state.currentIndex == -1)\r\n            list.push(data)\r\n        else\r\n            list[this.state.currentIndex] = data\r\n        localStorage.setItem('todolist', JSON.stringify(list))\r\n        this.setState({ list, currentIndex: -1 })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <ToDoForm \r\n                    currentIndex={this.state.currentIndex}\r\n                    list={this.state.list}\r\n                    onAddOrEdit={this.onAddOrEdit}\r\n                />\r\n                <hr />\r\n                <table style={{marginLeft:10}}>\r\n                    <tbody >\r\n                        {this.state.list.map((item, index) => {\r\n                            return <tr style={{fontSize:13,backgroundColor:\"#F8F8F8\",borderRadius:10}} key={index}>\r\n                                <td style={{padding:10, borderRadius:10}} >{item.todo}</td>\r\n                                <td style={{borderRadius:10}}><button style={{margin:10,border:0,padding:5,borderRadius:6,width:70,backgroundColor:\"#8FDC7E\",color:\"white\"}}onClick={() => this.handleEdit(index)}>Edit</button></td>\r\n                                <td style={{borderRadius:10}}><button style={{margin:10,border:0,padding:5,borderRadius:6,width:70,backgroundColor:\"#E96F6F\",color:\"white\"}}onClick={() => this.handleDelete(index)}>Delete</button></td>\r\n                            </tr>\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoList */","map":{"version":3,"sources":["A:/Accolite/React/Assignment/my-to-do/src/component/ToDoList.js"],"names":["React","useState","ToDoForm","ToDoList","content","setContent","currentIndex","list","returnList","onAddOrEdit","marginLeft","map","item","index","fontSize","backgroundColor","borderRadius","padding","todo","margin","border","width","color","handleEdit","handleDelete","localStorage","getItem","setItem","JSON","stringify","parse","templist","splice","setState","data","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport ToDoForm from './ToDoForm'\r\n\r\nconst ToDoList=()=> {\r\n  \r\n    const[content,setContent]=useState({currentIndex: -1,list: returnList()})\r\n    \r\n       return (\r\n            <div >\r\n                <ToDoForm \r\n                currentIndex={content.currentIndex}\r\n                list={content.list}\r\n                onAddOrEdit={onAddOrEdit}/>\r\n                <hr />\r\n                <table style={{marginLeft:10}}>\r\n                    <tbody >\r\n                        {content.list.map((item, index) => {\r\n                            return <tr style={{fontSize:13,backgroundColor:\"#F8F8F8\",borderRadius:10}} key={index}>\r\n                                <td style={{padding:10, borderRadius:10}} >{item.todo}</td>\r\n                                <td style={{borderRadius:10}}><button style={{margin:10,border:0,padding:5,borderRadius:6,width:70,backgroundColor:\"#8FDC7E\",color:\"white\"}}onClick={handleEdit(index)}>Edit</button></td>\r\n                                <td style={{borderRadius:10}}><button style={{margin:10,border:0,padding:5,borderRadius:6,width:70,backgroundColor:\"#E96F6F\",color:\"white\"}}onClick={handleDelete(index)}>Delete</button></td>\r\n                            </tr>\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n\r\nconst returnList=()=> {\r\n    if (localStorage.getItem('todolist') == null)\r\n        localStorage.setItem('todolist', JSON.stringify([]))\r\n    return JSON.parse(localStorage.getItem('todolist'))\r\n}\r\n\r\nconst handleEdit = (index) => {\r\n    setContent({currentIndex: index, list:list })\r\n}\r\n\r\nconst handleDelete = (index) => {\r\n    var templist = returnList()\r\n    templist.splice(index, 1);\r\n    localStorage.setItem('todolist', JSON.stringify(templist))\r\n    setState({ currentIndex: -1,list:templist })\r\n}\r\n\r\nconst onAddOrEdit = (data) => {\r\n    var templist = returnList()\r\n    if (content.currentIndex == -1)\r\n        templist.push(data)\r\n    else\r\n        templist[content.currentIndex] = data\r\n    localStorage.setItem('todolist', JSON.stringify(templist))\r\n    setState({ currentIndex: -1,list:templist })\r\n}\r\n\r\nexport default ToDoList\r\n\r\n\r\n\r\n/* import React, { Component } from 'react'\r\nimport ToDoForm from './ToDoForm'\r\n\r\nclass ToDoList extends Component {\r\n    state = {\r\n        currentIndex: -1,\r\n        list: this.returnList()\r\n    }\r\n\r\n    returnList() {\r\n        if (localStorage.getItem('todolist') == null)\r\n            localStorage.setItem('todolist', JSON.stringify([]))\r\n        return JSON.parse(localStorage.getItem('todolist'))\r\n    }\r\n\r\n    handleEdit = (index) => {\r\n        this.setState({\r\n            currentIndex: index\r\n        })\r\n    }\r\n\r\n    handleDelete = (index) => {\r\n        var list = this.returnList()\r\n        list.splice(index, 1);\r\n        localStorage.setItem('todolist', JSON.stringify(list))\r\n        this.setState({ list, currentIndex: -1 })\r\n    }\r\n\r\n    onAddOrEdit = (data) => {\r\n        var list = this.returnList()\r\n        if (this.state.currentIndex == -1)\r\n            list.push(data)\r\n        else\r\n            list[this.state.currentIndex] = data\r\n        localStorage.setItem('todolist', JSON.stringify(list))\r\n        this.setState({ list, currentIndex: -1 })\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <ToDoForm \r\n                    currentIndex={this.state.currentIndex}\r\n                    list={this.state.list}\r\n                    onAddOrEdit={this.onAddOrEdit}\r\n                />\r\n                <hr />\r\n                <table style={{marginLeft:10}}>\r\n                    <tbody >\r\n                        {this.state.list.map((item, index) => {\r\n                            return <tr style={{fontSize:13,backgroundColor:\"#F8F8F8\",borderRadius:10}} key={index}>\r\n                                <td style={{padding:10, borderRadius:10}} >{item.todo}</td>\r\n                                <td style={{borderRadius:10}}><button style={{margin:10,border:0,padding:5,borderRadius:6,width:70,backgroundColor:\"#8FDC7E\",color:\"white\"}}onClick={() => this.handleEdit(index)}>Edit</button></td>\r\n                                <td style={{borderRadius:10}}><button style={{margin:10,border:0,padding:5,borderRadius:6,width:70,backgroundColor:\"#E96F6F\",color:\"white\"}}onClick={() => this.handleDelete(index)}>Delete</button></td>\r\n                            </tr>\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToDoList */"]},"metadata":{},"sourceType":"module"}